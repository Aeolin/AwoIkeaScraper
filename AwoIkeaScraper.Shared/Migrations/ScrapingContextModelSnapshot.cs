// <auto-generated />
using System;
using AwoIkeaScraper.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AwoIkeaScraper.Shared.Migrations
{
    [DbContext(typeof(ScrapingContext))]
    partial class ScrapingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AwoIkeaScraper.Shared.Models.Currency", b =>
                {
                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.HasKey("CurrencyCode");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("AwoIkeaScraper.Shared.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("ScrapeEventId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("ScrapeEventId");

                    b.HasIndex("ProductNumber", "ScrapeEventId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AwoIkeaScraper.Shared.Models.ScrapeEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ImportEnded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ImportStarted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AwoIkeaScraper.Shared.ScrapeError", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<Guid?>("ScrapeEventId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ScrapeEventId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("AwoIkeaScraper.Shared.Models.Product", b =>
                {
                    b.HasOne("AwoIkeaScraper.Shared.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode");

                    b.HasOne("AwoIkeaScraper.Shared.Models.ScrapeEvent", "ScrapeEvent")
                        .WithMany("GeneratedProducts")
                        .HasForeignKey("ScrapeEventId");

                    b.Navigation("Currency");

                    b.Navigation("ScrapeEvent");
                });

            modelBuilder.Entity("AwoIkeaScraper.Shared.ScrapeError", b =>
                {
                    b.HasOne("AwoIkeaScraper.Shared.Models.ScrapeEvent", "ScrapeEvent")
                        .WithMany("Errors")
                        .HasForeignKey("ScrapeEventId");

                    b.Navigation("ScrapeEvent");
                });

            modelBuilder.Entity("AwoIkeaScraper.Shared.Models.ScrapeEvent", b =>
                {
                    b.Navigation("Errors");

                    b.Navigation("GeneratedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
